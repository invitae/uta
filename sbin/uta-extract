#!/usr/bin/env bash

# Extract data from NCBI files into intermediate files.

set -euxo pipefail

if [ -z "$NCBI_DIR" ] || [ -z "$WORKING_DIR" ] || [ -z "$LOG_DIR" ]
then
    echo 'NCBI_DIR, WORKING_DIR, and LOG_DIR environment variables must be set'
    exit 1
fi

# genes
sbin/ncbi-parse-geneinfo $NCBI_DIR/gene/DATA/GENE_INFO/Mammalia/Homo_sapiens.gene_info.gz | \
    gzip -c > "$WORKING_DIR/geneinfo.gz" 2>&1 | tee "$LOG_DIR/ncbi-parse-geneinfo.log"

# transcript protein associations
sbin/ncbi-parse-gene2refseq $NCBI_DIR/gene/DATA/gene2refseq.gz | gzip -c > "$WORKING_DIR/assocacs.gz" 2>&1 | \
    tee "$LOG_DIR/ncbi-fetch-assoc-acs.log"

# parse transcript info from GBFF input files
mapfile -t GBFF_FILES < <(find "$NCBI_DIR/refseq" -type f -name "human.*.rna.gbff.gz")
sbin/ncbi-parse-gbff "${GBFF_FILES[@]}" | gzip -c > "$WORKING_DIR/txinfo.gz" 2>&1 | \
    tee "$LOG_DIR/ncbi-parse-gbff.log"

# parse alignments from GFF input files
# Due to NCBI's handling of transcripts with "frameshifting insertions and deletions with micro-introns" we
# need to parse out the cDNA_match alignment and use them preferentially over exons from genome GFF files.
# The cDNA_match records include the indels and do not have micro-introns.
mapfile -t GFF_FILES < <(find "$NCBI_DIR/genomes" -type f -name "GCF_*_genomic.gff.gz")
sbin/ncbi-parse-gff "${GFF_FILES[@]}" | gzip -c > "$WORKING_DIR/cdna_match.exonsets.gz" 2>&1 | \
    tee "$LOG_DIR/ncbi_parse_gff.log"

# extract exon blocks from GFF files
sbin/ncbi_parse_genomic_gff.py "${GFF_FILES[@]}" | gzip -c > "$WORKING_DIR/exon_block.exonsets.gz" 2>&1 | \
    tee "$LOG_DIR/ncbi-parse-genomic-gff.log"

# coalesce exonsets
sbin/coalesce_exonsets.py "$WORKING_DIR/cdna_match.exonsets.gz" "$WORKING_DIR/exon_block.exonsets.gz" | \
    gzip -c > "$WORKING_DIR/unfiltered_exonsets.gz" 2>&1 | tee "$LOG_DIR/coalesce_exonsets.log"

# filter transcripts
sbin/filter_exonset_transcripts.py --tx-info "$WORKING_DIR/txinfo.gz" --exonsets "$WORKING_DIR/unfiltered_exonsets.gz" \
    --missing-ids "$WORKING_DIR/filtered_tx_acs.txt" | gzip -c > "$WORKING_DIR/exonsets.gz" 2>&1 | \
    tee "$LOG_DIR/filter_exonset_transcripts.log"

# move fasta files into same dir
find "$NCBI_DIR" -type f -name "*.f[an]a.gz" -print0 | xargs -i --null cp {} "$WORKING_DIR/"
